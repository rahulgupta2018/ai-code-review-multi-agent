# Environment Configuration for AI Code Review Multi-Agent System with AGDK Integration
# Copy this file to .env and update the values

# ============================================================================
# CORE SYSTEM CONFIGURATION
# ============================================================================

# Environment Settings
ENVIRONMENT=development
DEBUG=true
DEV_MODE=true
HOT_RELOAD=true

# Application Identification
APP_NAME=ai-code-review-multi-agent
APP_VERSION=2.0.0

# ============================================================================
# GOOGLE CLOUD & AGDK CONFIGURATION
# ============================================================================

# Google Cloud Project Settings
GOOGLE_CLOUD_PROJECT_ID=your-project-id
GOOGLE_CLOUD_LOCATION=us-central1
GOOGLE_APPLICATION_CREDENTIALS=./credentials/google-cloud-credentials.json

# AGDK Core Settings
AGDK_ENABLED=true
USE_AGDK=true
ANALYSIS_USE_AGDK=true

# AGDK Runtime Configuration
AGDK_PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID}
AGDK_SESSION_TIMEOUT=3600
AGDK_MAX_RETRIES=3
AGDK_RETRY_DELAY=1.0

# AGDK Services Configuration
ENABLE_VERTEX_AI=true
ENABLE_DISCOVERY_ENGINE=true
ENABLE_DIALOGFLOW=true

# Vertex AI Settings
VERTEX_AI_LOCATION=${GOOGLE_CLOUD_LOCATION}
VERTEX_AI_MODEL=gemini-1.5-pro
VERTEX_AI_MAX_TOKENS=4096
VERTEX_AI_TEMPERATURE=0.7

# Discovery Engine Settings
AGENT_BUILDER_LOCATION=global
DISCOVERY_ENGINE_SEARCH_TIER=SEARCH_TIER_ENTERPRISE
DISCOVERY_ENGINE_RESULT_COUNT=10

# Dialogflow Settings
DIALOGFLOW_LOCATION=global
DIALOGFLOW_LANGUAGE_CODE=en-US
DIALOGFLOW_TIME_ZONE=America/New_York

# AGDK Development Portal
AGDK_DEV_PORTAL_HOST=0.0.0.0
AGDK_DEV_PORTAL_PORT=8200
AGDK_WORKSPACE=/app/agdk-workspace
AGDK_LOG_LEVEL=INFO

# AGDK Feature Flags
ENABLE_EXPERIMENTAL_FEATURES=false
ENABLE_TELEMETRY=true
ENABLE_METRICS=true
ENABLE_REQUEST_LOGGING=false
ENABLE_RESPONSE_LOGGING=false

# ============================================================================
# LLM PROVIDER CONFIGURATION
# ============================================================================

# Provider Selection and Fallback
DEFAULT_LLM_PROVIDER=ollama
LLM_FALLBACK_ORDER=ollama,openai,gemini
ANALYSIS_USE_LOCAL_FALLBACK=true

# Ollama Configuration (Local LLM)
OLLAMA_BASE_URL=http://host.docker.internal:11434
OLLAMA_MODEL=llama3.1:8b
OLLAMA_TIMEOUT=120

# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key
OPENAI_ORG_ID=your-openai-org-id
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4000
OPENAI_TEMPERATURE=0.7

# Gemini Configuration
GEMINI_API_KEY=your-gemini-api-key
GEMINI_MODEL=gemini-1.5-pro
GEMINI_MAX_TOKENS=4000
GEMINI_TEMPERATURE=0.7

# ============================================================================
# MEMORY SYSTEM CONFIGURATION
# ============================================================================

# Memory Storage
DATABASE_URL=sqlite:///data/memory.db
MEMORY_RETRIEVAL_STRATEGY=contextual
MEMORY_CONFIDENCE_THRESHOLD=0.7
MEMORY_RETRIEVAL_LIMIT=50

# Memory Learning Settings
ENABLE_MEMORY_INTEGRATION=true
ENABLE_LEARNING=true
ENABLE_PATTERN_STORAGE=true
ENABLE_FEEDBACK_INTEGRATION=true

# Pattern Recognition
PATTERN_RECOGNITION_MODEL=pattern-recognition-v1
PATTERN_CONFIDENCE_THRESHOLD=0.85
ENABLE_CROSS_AGENT_LEARNING=true

# Memory Performance
MEMORY_CACHE_TTL=300
MEMORY_CACHE_SIZE=1000
MEMORY_PARTITION_SIZE=10000

# ============================================================================
# REDIS CONFIGURATION (For Multi-Agent Coordination)
# ============================================================================

# Redis Connection
REDIS_URL=redis://redis:6379
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Redis Performance
REDIS_CONNECTION_POOL_SIZE=10
REDIS_MAX_CONNECTIONS=100
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# Session Management
SESSION_REDIS_PREFIX=agdk:session:
SESSION_CLEANUP_INTERVAL=300
MAX_CONCURRENT_SESSIONS=10

# ============================================================================
# ANALYSIS CONFIGURATION
# ============================================================================

# File Processing Limits
MAX_FILE_SIZE=1048576
MAX_FILES_PER_ANALYSIS=1000
ANALYSIS_TIMEOUT=300
MAX_RETRY_ATTEMPTS=3

# Quality Control Thresholds
CONFIDENCE_THRESHOLD=0.7
MAX_FINDINGS_PER_FILE=25
MAX_RECOMMENDATIONS_PER_ANALYSIS=10

# Quality Gates
MIN_CONFIDENCE_FOR_CRITICAL=0.9
MIN_CONFIDENCE_FOR_HIGH=0.8
MIN_CONFIDENCE_FOR_MEDIUM=0.7
MIN_CONFIDENCE_FOR_LOW=0.6
MAX_FINDINGS_WITHOUT_EVIDENCE=5

# Language Support
SUPPORTED_LANGUAGES=python,javascript,typescript,java,go,rust,cpp,c,csharp,swift
DEFAULT_LANGUAGE=python

# ============================================================================
# OUTPUT & REPORTING CONFIGURATION
# ============================================================================

# Output Storage
OUTPUT_BASE_DIR=outputs
DEFAULT_OUTPUT_FORMATS=json,html,pdf
DASHBOARD_EXPORT_ENABLED=true

# Report Generation
ENABLE_PDF_REPORTS=true
ENABLE_HTML_REPORTS=true
ENABLE_JSON_EXPORT=true
ENABLE_XML_EXPORT=false

# Template Configuration
TEMPLATE_ENGINE=jinja2
CUSTOM_TEMPLATES_DIR=config/output/templates
REPORT_BRANDING_ENABLED=true

# ============================================================================
# API CONFIGURATION
# ============================================================================

# API Server Settings
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_TIMEOUT=300

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://localhost:8200
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOW_HEADERS=*

# API Authentication
SECRET_KEY=your-secret-key-change-this-in-production
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
ALGORITHM=HS256

# Rate Limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60
RATE_LIMIT_ENABLED=true

# ============================================================================
# WEBSOCKET CONFIGURATION
# ============================================================================

# WebSocket Settings
WS_HEARTBEAT_INTERVAL=30
WS_MAX_CONNECTIONS=100
WS_CONNECTION_TIMEOUT=300
WS_PING_INTERVAL=20
WS_PING_TIMEOUT=10

# Real-time Updates
ENABLE_PROGRESS_STREAMING=true
ENABLE_RESULT_STREAMING=true
ENABLE_STATUS_UPDATES=true

# ============================================================================
# PERFORMANCE & RESOURCE CONFIGURATION
# ============================================================================

# System Resources
MAX_WORKERS=4
MEMORY_LIMIT=2GB
CPU_LIMIT=80
MAX_CONCURRENT_ANALYSES=5

# Caching Configuration
ENABLE_RESULT_CACHING=true
CACHE_TTL_MINUTES=60
CACHE_KEY_STRATEGY=content_hash
ENABLE_MEMORY_CACHING=true

# Parallel Processing
ENABLE_FILE_LEVEL_PARALLELISM=true
MAX_CONCURRENT_FILES=5
ENABLE_FINDING_LEVEL_PARALLELISM=false

# Resource Monitoring
ENABLE_RESOURCE_MONITORING=true
RESOURCE_CHECK_INTERVAL=30
MEMORY_WARNING_THRESHOLD=80
CPU_WARNING_THRESHOLD=90

# ============================================================================
# LOGGING & MONITORING CONFIGURATION
# ============================================================================

# Logging Settings
LOG_LEVEL=INFO
LOG_FILE=logs/app.log
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# Component Logging
LOG_ANALYSIS_START=true
LOG_ANALYSIS_COMPLETION=true
LOG_FINDING_CREATION=true
LOG_MEMORY_OPERATIONS=true
LOG_AGDK_EVENTS=true

# Debug Logging
DEBUG_MEMORY=false
DEBUG_AGDK=false
DEBUG_LLM=false
DEBUG_API=false

# Monitoring & Metrics
ENABLE_PROMETHEUS_METRICS=true
PROMETHEUS_PORT=9090
METRICS_ENDPOINT=/metrics

# Performance Tracking
TRACK_EXECUTION_TIME=true
TRACK_MEMORY_USAGE=true
TRACK_LLM_TOKEN_USAGE=true
TRACK_CONFIDENCE_SCORES=true

# Error Reporting
LOG_VALIDATION_FAILURES=true
LOG_TIMEOUT_ERRORS=true
LOG_MEMORY_ERRORS=true
LOG_LLM_ERRORS=true
ERROR_NOTIFICATION_ENABLED=false

# ============================================================================
# DEVELOPMENT & TESTING CONFIGURATION
# ============================================================================

# Development Tools
ENABLE_DEV_TOOLS=true
ENABLE_API_DOCS=true
ENABLE_SWAGGER_UI=true
ENABLE_REDOC=true

# Testing Configuration
TEST_DATABASE_URL=sqlite:///data/test_memory.db
TEST_REDIS_URL=redis://redis:6379/1
RUN_INTEGRATION_TESTS=false
TEST_TIMEOUT=60

# Feature Flags for Development
ENABLE_EXPERIMENTAL_AGENTS=false
ENABLE_BETA_FEATURES=false
SKIP_AUTH_IN_DEV=true
MOCK_EXTERNAL_SERVICES=false

# Docker Development
DOCKER_BUILD_TARGET=development
JUPYTER_PORT=8888
DEV_PORTAL_AUTO_START=true

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Authentication & Authorization
ENABLE_AUTHENTICATION=false
ENABLE_AUTHORIZATION=false
JWT_SECRET_KEY=${SECRET_KEY}
JWT_ALGORITHM=HS256

# API Security
ENABLE_RATE_LIMITING=true
ENABLE_CORS=true
TRUST_PROXY_HEADERS=false
SECURE_COOKIES=false

# Data Security
ENCRYPT_SENSITIVE_DATA=false
ENCRYPTION_KEY=your-encryption-key-change-this
HASH_ALGORITHM=sha256

# ============================================================================
# CI/CD & DEPLOYMENT CONFIGURATION
# ============================================================================

# Deployment Settings
DEPLOYMENT_ENVIRONMENT=development
HEALTH_CHECK_ENDPOINT=/health
READINESS_CHECK_ENDPOINT=/ready

# Container Configuration
CONTAINER_NAME=ai-code-review-agdk
CONTAINER_REGISTRY=gcr.io
IMAGE_TAG=latest

# Kubernetes Settings (if deploying to K8s)
K8S_NAMESPACE=ai-code-review
K8S_SERVICE_NAME=agdk-service
K8S_INGRESS_HOST=ai-code-review.local

# ============================================================================
# EXTERNAL INTEGRATIONS
# ============================================================================

# GitHub Integration
GITHUB_TOKEN=your-github-token
GITHUB_WEBHOOK_SECRET=your-webhook-secret
ENABLE_GITHUB_INTEGRATION=false

# GitLab Integration
GITLAB_TOKEN=your-gitlab-token
GITLAB_WEBHOOK_SECRET=your-webhook-secret
ENABLE_GITLAB_INTEGRATION=false

# Slack Integration
SLACK_BOT_TOKEN=your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret
ENABLE_SLACK_NOTIFICATIONS=false

# Email Notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
ENABLE_EMAIL_NOTIFICATIONS=false