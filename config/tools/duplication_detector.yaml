# Duplication Detector Configuration
# Configuration for AST-based code duplication detection

# Language detection from file extensions
language_detection:
  '.py': 'python'
  '.js': 'javascript'
  '.jsx': 'javascript'
  '.ts': 'typescript'
  '.tsx': 'typescript'
  '.java': 'java'
  '.go': 'go'
  '.rs': 'rust'
  '.cpp': 'cpp'
  '.cxx': 'cpp'
  '.cc': 'cpp'
  '.c++': 'cpp'
  '.hpp': 'cpp'
  '.hxx': 'cpp'
  '.h++': 'cpp'
  '.cs': 'csharp'

# Similarity thresholds for different clone types
similarity_thresholds:
  exact_clone: 1.0        # Type 1: Exact clones (identical code)
  parameterized_clone: 0.9 # Type 2: Parameterized clones (same structure, different parameters)
  near_miss_clone: 0.8    # Type 3: Near-miss clones (similar with minor differences)
  semantic_clone: 0.7     # Type 4: Semantic clones (same functionality, different implementation)

# Minimum size requirements for code blocks to be considered
minimum_clone_size:
  lines: 5      # Minimum number of lines
  tokens: 50    # Minimum number of tokens
  nodes: 10     # Minimum number of AST nodes

# Patterns to ignore during analysis
ignore_patterns:
  - import_statement
  - comment
  - string_literal
  - identifier

# Language-specific configuration
language_settings:
  python:
    function_nodes:
      - function_definition
      - async_function_definition
    class_nodes:
      - class_definition
    block_nodes:
      - if_statement
      - for_statement
      - while_statement
      - try_statement
      - with_statement
    
  javascript:
    function_nodes:
      - function_declaration
      - function_expression
      - arrow_function
      - method_definition
    class_nodes:
      - class_declaration
    block_nodes:
      - if_statement
      - for_statement
      - while_statement
      - try_statement
      - switch_statement
    
  typescript:
    function_nodes:
      - function_declaration
      - function_expression
      - arrow_function
      - method_definition
      - method_signature
    class_nodes:
      - class_declaration
      - interface_declaration
    block_nodes:
      - if_statement
      - for_statement
      - while_statement
      - try_statement
      - switch_statement
    
  java:
    function_nodes:
      - method_declaration
      - constructor_declaration
    class_nodes:
      - class_declaration
      - interface_declaration
      - enum_declaration
    block_nodes:
      - if_statement
      - for_statement
      - while_statement
      - try_statement
      - switch_expression
    
  go:
    function_nodes:
      - function_declaration
      - method_declaration
    class_nodes:
      - struct_type
      - interface_type
    block_nodes:
      - if_statement
      - for_statement
      - switch_statement
      - type_switch_statement
    
  rust:
    function_nodes:
      - function_item
    class_nodes:
      - struct_item
      - trait_item
      - impl_item
      - enum_item
    block_nodes:
      - if_expression
      - loop_expression
      - while_expression
      - for_expression
      - match_expression
    
  cpp:
    function_nodes:
      - function_definition
      - function_declarator
    class_nodes:
      - class_specifier
      - struct_specifier
    block_nodes:
      - if_statement
      - for_statement
      - while_statement
      - try_statement
      - switch_statement
    
  csharp:
    function_nodes:
      - method_declaration
      - constructor_declaration
      - property_declaration
    class_nodes:
      - class_declaration
      - interface_declaration
      - struct_declaration
      - record_declaration
    block_nodes:
      - if_statement
      - for_statement
      - while_statement
      - try_statement
      - switch_statement

# Advanced detection settings
advanced_settings:
  # Enable cross-language duplication detection
  cross_language_detection: false
  
  # Maximum file size to analyze (in KB)
  max_file_size_kb: 1024
  
  # Maximum number of files to analyze in batch
  max_files_per_batch: 100
  
  # Enable detailed similarity scoring breakdown
  detailed_scoring: true
  
  # Cache parsed ASTs for better performance
  enable_ast_caching: true
  
  # Normalize identifiers for better parameterized clone detection
  normalize_identifiers: true
  
  # Minimum similarity for reporting (avoid noise)
  minimum_reporting_threshold: 0.65

# Output formatting preferences
output_preferences:
  # Include code snippets in results
  include_code_snippets: true
  
  # Maximum length of code snippets
  max_snippet_length: 200
  
  # Sort results by similarity score
  sort_by_similarity: true
  
  # Group results by clone type
  group_by_clone_type: true
  
  # Include performance metrics
  include_performance_metrics: true