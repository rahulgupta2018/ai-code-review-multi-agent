[tool.poetry]
name = "ai-code-review-multi-agent"
version = "1.0.0"
description = "Multi-agent code review system with Google GADK integration"
authors = ["Rahul Gupta rahulgupta2002@gmail.com"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.5.0"
pyyaml = "^6.0.1"
tree-sitter = "^0.20.2"
redis = "^5.0.1"
sqlalchemy = "^2.0.23"
websockets = "^12.0"
httpx = "^0.25.2"
jinja2 = "^3.1.2"
reportlab = "^4.0.7"
click = "^8.1.7"
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"

# Google Cloud & GADK Integration
google-cloud-aiplatform = "^1.50.0"
google-cloud-discoveryengine = "^0.11.0"
google-cloud-dialogflow = "^2.23.0"
google-auth = "^2.23.0"
google-auth-oauthlib = "^1.0.0"
google-auth-httplib2 = "^0.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.5.0"

[tool.poetry.group.test.dependencies]
pytest-mock = "^3.12.0"
httpx = "^0.25.2"
pytest-xdist = "^3.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
gadk-review = "src.cli.main:main"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "memory: marks tests for memory system",
    "gadk: marks tests for GADK integration",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]